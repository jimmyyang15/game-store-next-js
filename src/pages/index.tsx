import type { NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";
import { trpc } from "../utils/trpc";
import { motion, MotionValue, useMotionValue, useTransform } from "framer-motion";
import { useEffect, useState } from "react";
import { useQuery } from "@tanstack/react-query";
import { IGame } from "../../interface";
import GameCard from "../components/GameCard";
import { v4 } from 'uuid'
const Home: NextPage = () => {

  const [pageSize,setPageSize] = useState(false)

  const fetchGames = async() => {
    const res = await fetch(`https://api.rawg.io/api/games?key=${process.env.NEXT_PUBLIC_RAWG_API_KEY}&page_size=${40}`);
    const data = await res.json();

    return data.results;
  }


  const { data:games,isLoading,isError,refetch } = useQuery(["fetchGames"],fetchGames);
  console.log(games);
  useEffect(()=>{
    refetch()
  },[pageSize])


  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="pl-60 min-h-screen pt-4 pr-4">
        <h1 className="text-white text-6xl mt-4 font-bold">Highest rated games</h1>
        <div className="grid grid-cols-1  md:grid-cols-2 lg:grid-cols-3 gap-8 mt-8">
          {games?.slice(0,pageSize ? 40 : 20).map((game:IGame)=>(
            <GameCard game={game} key={v4()} />
          ))}
        </div>
        <button onClick={()=>setPageSize((prev)=>!prev)} className="bg-secondary text-white rounded-full font-bold mt-4 py-2 px-4 mb-2">{pageSize ? "Show less" : "Show more"}</button>
      
      </main>
    </>
  );
};

export default Home;
